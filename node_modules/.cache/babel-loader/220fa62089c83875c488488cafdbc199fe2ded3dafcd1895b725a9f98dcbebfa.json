{"ast":null,"code":"const API_URL = \"http://localhost:8000/api/\";\nexport const fetchData = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}${endpoint}`, {\n    ...options,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${token}`,\n      ...options.headers\n    },\n    credentials: 'include' // Umożliwia wysyłanie ciasteczek\n  });\n  if (response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.reload();\n  }\n  return response.json();\n};\nexport const postData = async (endpoint, data, options = {}) => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}${endpoint}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${token}`,\n      ...options.headers\n    },\n    body: JSON.stringify(data)\n  });\n  const responseData = await response.json();\n  if (!response.ok) {\n    throw new Error(responseData.error || 'Something went wrong');\n  }\n  return responseData;\n};\nexport const updateData = async (endpoint, data, options = {}) => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}${endpoint}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${token}`,\n      ...options.headers\n    },\n    body: JSON.stringify(data)\n  });\n  if (response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.reload();\n  }\n  return response.json();\n};\nexport const login = async (username, password) => {\n  const response = await fetch(`${API_URL}auth/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n  if (response.ok) {\n    localStorage.setItem('token', data.token);\n  }\n  return data;\n};\nexport const getUserInfo = async () => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}user-info/`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${token}`\n    }\n  });\n  if (response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.reload();\n  }\n  if (!response.ok) {\n    throw new Error('Failed to fetch user info');\n  }\n  return response.json();\n};\nexport const deleteData = async endpoint => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}${endpoint}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${token}`\n    }\n  });\n  if (response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.reload();\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","fetchData","endpoint","options","token","localStorage","getItem","response","fetch","headers","credentials","status","removeItem","window","location","reload","json","postData","data","method","body","JSON","stringify","responseData","ok","Error","error","updateData","login","username","password","setItem","getUserInfo","deleteData"],"sources":["C:/Users/piotr/Documents/Frontend BD/frontend/src/api.js"],"sourcesContent":["const API_URL = \"http://localhost:8000/api/\";\r\n\r\nexport const fetchData = async (endpoint, options = {}) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}${endpoint}`, {\r\n        ...options,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Token ${token}`,\r\n            ...options.headers,\r\n        },\r\n        credentials: 'include', // Umożliwia wysyłanie ciasteczek\r\n    });\r\n    if (response.status === 401) {\r\n        localStorage.removeItem('token');\r\n        window.location.reload();\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const postData = async (endpoint, data, options = {}) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Token ${token}`,\r\n            ...options.headers,\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n    const responseData = await response.json();\r\n    if (!response.ok) {\r\n        throw new Error(responseData.error || 'Something went wrong');\r\n    }\r\n    return responseData;\r\n};\r\n\r\nexport const updateData = async (endpoint, data, options = {}) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}${endpoint}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Token ${token}`,\r\n            ...options.headers,\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n    if (response.status === 401) {\r\n        localStorage.removeItem('token');\r\n        window.location.reload();\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n    const response = await fetch(`${API_URL}auth/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n    }\r\n    return data;\r\n};\r\n\r\nexport const getUserInfo = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}user-info/`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Token ${token}`,\r\n        },\r\n    });\r\n    if (response.status === 401) {\r\n        localStorage.removeItem('token');\r\n        window.location.reload();\r\n    }\r\n    if (!response.ok) {\r\n        throw new Error('Failed to fetch user info');\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const deleteData = async (endpoint) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}${endpoint}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Token ${token}`,\r\n        },\r\n    });\r\n    if (response.status === 401) {\r\n        localStorage.removeItem('token');\r\n        window.location.reload();\r\n    }\r\n    return response.json();\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}